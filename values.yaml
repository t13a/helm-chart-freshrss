image:
  repository: freshrss/freshrss
  tag: 1.14.2
  pullPolicy: IfNotPresent

# extraEnv:

deployment:
  replicaCount: 1
  args:
    - /bin/sh
    - -c
    - |
        . /etc/apache2/envvars \
        && exec apache2 -D FOREGROUND
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  priorityClassName:

cronjob:
  enabled: true
  schedule: "17,47 * * * *"
  startingDeadlineSeconds:
  activeDeadlineSeconds:
  args:
    - su
    - www-data
    - -s
    - /bin/sh
    - -c
    - |
        php /var/www/FreshRSS/app/actualize_script.php
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  priorityClassName:

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## mariadb data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 8Gi

# extraVolumeMounts:
# extraVolumes:
